a rete-based expert system builds a network of nodes , where each node ( except the root ) corresponds to a pattern occurring in the left-hand-side ( the condition part ) of a rule the same word is used in modern italian to mean network in very large expert systems , however , the original rete algorithm tends to run into memory and server consumption problems rete or collection oriented match ) the rete algorithm provides a generalized logical description of an implementation of functionality responsible for matching data tuples ( '' facts '' ) against productions ( '' rules '' ) in a pattern-matching production system ( a category of rule engine ) the rete algorithm exhibits the following major characteristics : it reduces or eliminates certain types of redundancy through the use of node sharing it is optional , and is only included if required it consists of 2-input nodes where each node has a '' left '' and a '' right '' input in this article , however , we will describe data propagation in terms of wme lists , rather than tokens , in recognition of different implementation options and the underlying purpose and use of tokens when a join node is left-activated it traverses a single newly stored wme list in the beta memory , retrieving specific attribute values of given wmes it compares these values with attribute values of each wme in the alpha memory wme lists are stored in beta memories whenever the engine will perform additional left activations on subsequent beta nodes logically , a beta node at the head of a branch of beta nodes is a special case because it takes no input from any beta memory higher in the network different engines handle this issue in different ways if a rete contains no beta network , alpha nodes feed tokens , each containing a single wme , directly to p-nodes this characteristic is termed refraction updates are represented by retracting and then re-asserting the wme the engine continues to fire production instances , and to enter new match-resolve-act cycles , until no further production instances exist on the agenda existential and universal quantifications however , by implementing additional beta node types , it is possible for rete networks to perform quantifications universal quantification involves testing that an entire set of wmes in working memory meets a given condition in another approach , the node maintains an additional memory on each wme list received from the left input the second approach described above is often used to support efficient mechanisms for removal of wme lists existential quantification can be performed by combining two negation beta nodes this represents the semantics of double negation ( e.g , '' if not not any matching wmes , then type nodes can be considered as specialized select nodes they discriminate between different tuple relation types implementations may differ in physical detail the diagram does not illustrate all node-sharing possibilities for a more detailed and complete description of the rete algorithm , see chapter 2 of production matching for large learning systems by robert doorenbos ( see link below ) this approach is only practical when wmes represent fixed-length tuples , and the length of each tuple is short ( e.g when a wme enters the rete , the index is used to locate a set of memories whose conditional pattern matches the wme attributes , and the wme is then added directly to each of these memories however , in order to implement non-equality tests , the rete may contain additional 1-input node networks through which wmes are passed before being placed in a memory beta nodes process tokens each beta node performs its work and , as a result , may create new tokens to hold a list of wmes representing a partial match the new tokens are then stored in the output memory for example , when a match is found for one production , this may result in the assertion of new wmes which , in turn , match the conditions for another production the rete algorithm does not define any approach to justification for example , an expert system might justify a conclusion that an animal is an elephant by reporting that it is large , grey , has big ears , a trunk and tusks engines exhibit significant variation in the way they allow programmatic access to the engine and its working memory , and may extend the basic rete model to support forms of parallel and distributed processing several optimizations for rete have been identified and described in academic literature rete ii can be characterized by two areas of improvement ; specific optimizations relating to the general performance of the rete network ( including the use of hashed memories in order to increase performance with larger sets of data ) , and the inclusion of a backward chaining algorithm tailored to run on top of the rete network the rete iii algorithm , which is not rete-nt , is the fico trademark for rete ii and is implemented as part of the fico advisor engine in an infoworld benchmark , the algorithm was deemed 500 times faster than the original rete algorithm and 10 times faster than its predecessor , rete ii this algorithm is now licensed to sparkling logic , the company that forgy joined as investor and strategic advisor , as the inference engine of the smarts product .