in 1987 , kent beck and ward cunningham began experimenting with the idea of applying patterns to programming – specifically pattern languages – and presented their results at the oopsla conference that year ) , which is frequently abbreviated as '' gof '' the scope of the term remains a matter of dispute notable books in the design pattern genre include : although design patterns have been applied practically for a long time , formalization of the concept of design patterns languished for several years design patterns provide general solutions , documented in a format that does not require specifics tied to a particular problem a micro-architecture is a set of program constituents ( e.g efforts have also been made to codify design patterns in particular domains , including use of existing design patterns as well as domain specific design patterns applicability : situations in which this pattern is usable ; the context for the pattern implementation : a description of an implementation of the pattern ; the solution part of the pattern it has been observed that design patterns may just be a sign that some features are missing in a given programming language ( java or c++ for instance ) related observations were made by hannemann and kiczales who implemented several of the 23 design patterns using an aspect-oriented programming ( aspectj ) and showed that code-level dependencies were removed from the implementations of 17 of the 23 design patterns and that aspect-oriented programming could simplify the implementations of design patterns