each logical processor can be individually halted , interrupted or directed to execute a specified thread , independently from the other logical processor sharing the same physical core these resources include the execution engine , caches , and system bus interface ; the sharing of resources allows two logical processors to work with each other more efficiently , and allows a logical processor to borrow resources from a stalled logical core ( assuming both logical cores are associated with the same physical core ) ) this technology is transparent to operating systems and programs intel implemented hyper-threading on an x86 architecture processor in 2002 with the foster mp-based xeon according to intel , the first hyper-threading implementation used only 5 % more die area than the comparable non-hyperthreaded processor , but the performance was 15â€“30 % better tom 's hardware states : '' in some cases a p4 running at 3.0 & nbsp ; ghz with ht on can even beat a p4 running at 3.6 & nbsp ; ghz with ht turned off '' intel also claims significant performance improvements with a hyper-threading-enabled pentium & nbsp ; 4 processor in some artificial-intelligence algorithms as a result , performance improvements are very application-dependent ; however , when running two programs that require full attention of the processor , it can actually seem like one or both of the programs slows down slightly when hyper-threading technology is turned on this is due to the replay system of the pentium & nbsp ; 4 tying up valuable execution resources , equalizing the processor resources between the two programs , which adds a varying amount of execution time windows 2000 and linux older than 2.4 ) in 2006 , hyper-threading was criticised for energy inefficiency in 2013 , intel dropped smt in favor of out-of-order execution for its silvermont processor cores , as they found this gave better performance with better power efficiency than a lower number of cores with smt microcode updates were later released to address the issue