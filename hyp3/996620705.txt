this particular example also turns out to be ill conditioned : a small error in any calculation will cause drastic changes in the final position of the billiard balls collision detection in computer simulation collision detection utilizes time coherence to allow even finer time steps without much increasing cpu demand , such as in air traffic control constraints avoid inertia and thus instability often the terms '' discrete '' and '' continuous '' are used rather than a posteriori and a priori a posteriori ( discrete ) versus a priori ( continuous ) at each simulation step , a list of all intersecting bodies is created , and the positions and trajectories of these objects are '' fixed '' to account for the collision in the a priori methods , there is a collision detection algorithm which will be able to predict very precisely the trajectories of the physical bodies moreover , if the discrete step is too large , the collision could go undetected , resulting in an object which passes through another if it is sufficiently fast or small in all cases , resting contact requires special treatment : if two objects collide ( a posteriori ) or slide ( a priori ) and their relative motion is below a threshold , friction becomes stiction and both objects are arranged in the same branch of the scene graph those pairs will require further analysis observe that two such boxes , i_1 \times i_2 \times i_3 and j_1 \times j_2 \times j_3 intersect if and only if , i_1 intersects j_1 , i_2 intersects j_2 and i_3 intersects j_3 we have three lists of intervals ( one for each axis ) and all lists are the same length ( since each list has length n , the number of bounding boxes for a long time , video games had a very limited number of objects to treat , and so checking all pairs was not a problem in other cases , simply tiling the screen and binding each sprite into the tiles it overlaps provides sufficient pruning , and for pairwise checks , bounding rectangles or circles called hitboxes are used and deemed sufficiently accurate because games do not need to mimic actual physics , stability is not as much of an issue some games will calculate the distance the character can move before getting embedded into a wall , and only allow them to move that far collisions between characters , and collisions with projectiles and hazards , are treated separately for example , an attack may only land if the hitbox around an attacker 's punch connects with one of the opponent 's hurtboxes on their body , while opposing hitboxes colliding may result in the players trading or cancelling blows , and opposing hurtboxes do not interact with each other steven cameron ( oxford university ) web site on collision detection how to avoid a collision by george beck , wolfram demonstrations project