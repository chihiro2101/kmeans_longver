classes can have multiple superclasses , a list of slots ( member variables in c++/java parlance ) and a special metaclass each slot in a clos class must have a unique name clos does not by default support dispatch over all common lisp data types ( for example dispatch does not work for fully specialized array types or for types introduced by deftype ) adding or removing methods thus may lead to changed effective methods ( even when the generic function is called with the same arguments ) at runtime for example , ; declare the common argument structure prototype ( defgeneric f ( x y ) ) ; define an implementation for ( f integer t ) , where t matches all types ( defmethod f ( ( x integer ) y ) 1 ) ( f 1 2.0 ) > 1 ; define an implementation for ( f integer real ) ( defmethod f ( ( x integer ) ( y real ) ) 2 ) ( f 1 2.0 ) > 2 ; dispatch changed at runtime like the oo systems in most dynamic languages , clos does not enforce encapsulation additionally , the programmer can specify whether all possible primary methods along the class hierarchy should be called or just the one providing the closest match the circle-ellipse problem is readily solved in clos , and most oop design patterns either disappear or are qualitatively simpler flavors ( and its successor new flavors ) was the object system on the mit lisp machine pcl is widely ported and still provides the base for the clos implementation of several common lisp implementations clos in other programming languages because of the power and expressivity of clos , as well as the historical availability of tinyclos ( a simplified portable clos implementation written by gregor kiczales for use with scheme ) , clos-like mop-based object systems have become the de facto norm in most lisp dialect implementations , as well as finding their way into some other languages ' oop facilities : cos , the c object system cos , the c object system dylan dynace , a ( largely ) clos implementation in c dynace object oriented extension to c eieio for emacs lisp 1986 , portland , oregon , united states pages 17â€“29 of the conference on object-oriented programming systems languages and applications , issn 0362-1340 1998 ( 1st edition ) , macmillan technical publishing ; sonya keene , object-oriented programming in common lisp : a programmer 's guide to clos , 1988 , addison-wesley lawless and molly m fundamentals of clos by nick levine provides a step-by-step exposure to the implementation of oo concepts in clos , and how to utilize them