results returned from the statements would be interpreted back into c data formats like char using similar library code another key problem to the embedded sql concept was that the sql code could only be changed in the program 's source code , so that even small changes to the query required considerable programmer effort to modify the sql market referred to this as static sql , versus dynamic sql which could be changed at any time , like the command-line interfaces that shipped with almost all sql systems , or a programming interface that left the sql as plain text until it was called for this model to work , a data access standard was a requirement â€“ in the mainframe field it was highly likely that all of the computers in a shop were from one vendor and clients were computer terminals talking directly to them , but in the micro field there was no such standardization and any client might access any server using any networking system by the late 1980s there were several efforts underway to provide an abstraction layer for this purpose 14 , 4 april 1988 , pp lotus referred to these compound structures as query trees the first draft of the microsoft data access api was published in april 1989 , about the same time as lotus ' announcement of blueprint while attending the meeting with an early draft of what was then still known as ms data access , kyle geiger of microsoft invited jeff balboni and larry barnes of digital equipment corporation ( dec ) to join the sqlc meetings as well the commands in the api were split into groups ; the core group was identical to the cli , the level 1 extensions were commands that would be easy to implement in drivers , while level 2 commands contained the more advanced features like cursors jet allowed using one set of calls to access common microcomputer databases in a fashion similar to blueprint , by then renamed datalens . release and continued development odbc 1.0 was released in september 1992 some of this was unavoidable due to the path that the calls took through the jet-based stack ; odbc calls to sql databases were first converted from simba technologies 's sql dialect to jet 's internal c-based format , then passed to a driver for conversion back into sql calls for the database '' our history '' , simba technologies circa 1993 , openlink software shipped one of the first independently developed third-party odbc drivers , for the progress dbms , and soon followed with their udbc ( a cross-platform api equivalent of odbc and the sag/cli ) sdk and associated drivers for progress , sybase , oracle , and other dbms , for use on unix-like os ( aix , hp-ux , solaris , linux , etc ) , vms , windows nt , os/2 , and other os '' similarities and differences between odbc and cli '' , infosphere classic documentation , ibm , 26 september 2008 over time , database vendors took over the driver interfaces and provided direct links to their products this was propelled by two changes within the market , the introduction of graphical user interfaces ( guis ) like gnome that provided a need to access these sources in non-text form , and the emergence of open software database systems like postgresql and mysql , initially under unix but when odbc is no longer a strong requirement for client-server programming , now is odbc more important for data access and data virtualization of data integration in data analytic and data science scenarios finally , another set of commands , mostly used internally , is used to convert data from the dbms 's internal formats to a set of standardized odbc formats , which are based on the c language formats some drivers offer extra functionality not defined by the standard in odbc the driver manager ( dm ) provides these features all of this is included in the driver and the dsns an odbc-jdbc bridge consists of an odbc driver which uses the services of a jdbc driver to connect to a database this driver translates odbc function-calls into jdbc method-calls this provider translates ado.net method calls into odbc function calls programmers usually use such a bridge when a given database lacks an ado.net provider , but is accessible through an odbc driver microsoft ships one as part of the mdac system component bundle , together with other database drivers , to simplify development in c third parties have also developed such examples : openlink ado.net-odbc bridge , sequelink ado.net-odbc bridge microsoft odbc overview os400 and i5os odbc administration presentation slides from www.roth.net microsoft odbc & data access apis history article .