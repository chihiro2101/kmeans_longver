object-orientation is simply the logical extension of older techniques such as structured programming and abstract data types objects can correspond to things found in the real world the following object descriptions are examples of some of the most common design patterns for objects prototype object : a specialized metaobject from which other objects can be created by copying god object : an object that knows or does too much ( it is an example of an anti-pattern ) the objects in a distributed computing model tend to be larger grained , longer lasting , and more service-oriented than programming objects a standard method to package distributed objects is via an interface definition language ( idl ) examples include fault-tolerant corba objects , and ahnn , j 5142 , springer-verlag , berlin , heidelberg , 463-489 , generalize the replicated object concept to groups of replicas that might internally use any distributed protocol , perhaps resulting in only a weak consistency between their local states the semantic web is essentially a distributed-objects framework another critical difference is the way the model treats information that is currently not in the system programming objects and most database systems use the '' closed-world assumption '' the following table contrasts traditional objects from object-oriented programming languages such as java or c++ with semantic web objects : object lifetime object copy design pattern ( computer science ) business object ( computer science ) actor model